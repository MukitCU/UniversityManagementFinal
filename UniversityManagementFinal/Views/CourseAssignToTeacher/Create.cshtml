@model UniversityManagementFinal.Models.CourseAssignToTeacher

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="~/Scripts/jquery-3.1.0.min.js"></script>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CourseAssignToTeacher</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentId, "DepartmentId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownList("DepartmentId", new SelectList(ViewBag.DepartmentId, "Value", "Text"), "Please select a Department", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeacherId, "TeacherId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TeacherId", new SelectList(string.Empty, "Value", "Text"), "Please select a Teacher", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TeacherId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CreditToBeTaken, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CreditToBeTaken, new { @id = "CreditToBeTakenTextBox", @class= "form-control" })
                @Html.ValidationMessageFor(model => model.CreditToBeTaken, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RemainingCredit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RemainingCredit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RemainingCredit, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, "CourseId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CourseId", new SelectList(string.Empty, "Value", "Text"), "Please select a Course", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>

        

        @*<div class="form-group">
            @Html.LabelFor(model => model.OccupiedCredit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OccupiedCredit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OccupiedCredit, "", new { @class = "text-danger" })
            </div>
        </div>*@

       

        <div class="form-group">
            @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseCredit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseCredit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseCredit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script>

$(document).ready(function ()
{
   @* $.ajax({
        type: "GET",
        url: '@Url.Action("SelectDepartment")',
        datatype: "Json",
        success: function (data) {
            $.each(data, function (index, value) {
                $('#DepartmentId').append('<option value="' + value.DepartmentId + '">' + value.DepartmentName + '</option>');
            });
        }
    }); *@
//Dropdownlist Selectedchange event
    $("#DepartmentId").change(function() {
        $("#TeacherId").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("SelectTeacher")',
            dataType: 'json',
            data: { id: $("#DepartmentId").val() },
            success: function(teachers) {
                // states contains the JSON formatted list
                // of states passed from the controller
                $.each(teachers, function (i, Teacher) {
                    $("#TeacherId").append('<option value="'
                        + Teacher.TeacherId + '">'
                        + Teacher.TeacherName + '</option>');
                });
            },

            error: function(ex) {
                alert('Failed to retrieve teachers.' + ex);
            }
        });




        $("#CourseId").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("SelectCourse")',
            dataType: 'json',
            data: { id: $("#DepartmentId").val() },
            success: function (courses) {
                // states contains the JSON formatted list
                // of states passed from the controller
                $.each(courses, function (i, Course) {
                    $("#CourseId").append('<option value="'
                        + Course.CourseId + '">'
                        + Course.CourseCode + '</option>');
                });
            },

            error: function (ex) {
                alert('Failed to retrieve Courses.' + ex);
            }
        });





        return false;
    });
});
</script>


@*Scripts for remianing credit and credit to be taken*@

<script>

    $(document).ready(function () {
        $("#TeacherId").change(function () {


            $.ajax({
                        type: 'POST',
                        url: '@Url.Action("CreditToBeTaken")',
                        dataType: 'JSON',
                        data: { teacherId: $("#TeacherId").val() },
                        contentType: 'application/json; charset=utf-8',
                        success: function(data) {
                            if (data.success) {
                                $("#CreditToBeTakenTextBox").val(data.creditsToBeTaken);
                            } else {
                                alert('This Teacher ID is not valid. Try again!');
                            }
                        }

        });

    });

});

</script>




@*<script>
        $(document).ready(function () {
            $.ajax({
                type: "GET",
                url: '@Url.Action("SelectDepartment")',
                datatype: "Json",
                success: function (data) {
                    $.each(data, function (index, value) {
                        $('#DepartmentId').append('<option value="' + value.DepartmentId + '">' + value.DepartmentName + '</option>');
                    });
                }
            });


            $('#DepartmentId').change(function () {

                $('#TeacherId').empty();

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SelectTeacher")',
                    datatype: "Json",
                    data: { departmentId: $('#DepartmentId').val() },
                    success: function (data) {
                        $.each(data, function (index, value) {
                            $('#TeacherId').append('<option value="' + value.TeacherId + '">' + value.TeacherName + '</option>');
                        });
                    }
                });
            });
        });
    </script>*@


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
